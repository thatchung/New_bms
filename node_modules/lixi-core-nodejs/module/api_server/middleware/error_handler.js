module.exports = server =>
    server.registerMiddleware({
        key: 'error_handler',
        summary: 'xử lý lỗi',
        handler: async function({ api, context, server, exception }) {
            // #region [tạo thông tin về lỗi]

            let error = {
                code: exception.code || 'exception',
                data: exception.data
            };

            let err = server.options.errors.find(x => x.code === error.code);

            error.message = 'exception server error';
            if (exception.message) error.message = exception.message;
            else if (err && err.message) error.message = err.message;

            if (server.options.show_stack) error.stack = exception.stack;

            context.error = error;

            // #endregion

            // #region [xác định http status code]

            context.http_status_code = 500;
            if (exception.http_code)
                context.http_status_code = exception.http_code;
            else if (err && err.http_code)
                context.http_status_code = err.http_code;

            // #endregion

            // #region [ghi nhận log]

            let logger = api.logger || server.options.logger;
            if (logger) {
                if (error.code === 'exception') logger.error(error);
                else logger.warn(error);
            }

            // #endregion
        }
    });
