let Joi = require('../../joi/_index');
let defaultApiParameterLocation = require('../../helper/default_api_parameter_location');

module.exports = server =>
    server.registerMiddleware({
        key: 'parse_parameter',
        summary: 'xử lý tham số đầu vào',
        handler: async function({ context, server, request, api }) {
            for (let key in api.parameter) {
                if (!api.parameter.hasOwnProperty(key)) continue;
                let schema = api.parameter[key];

                let location = schema.describe().meta;
                if (location)
                    location = location.find(x => x.hasOwnProperty('location'));
                if (location) location = location.location;
                else
                    location = defaultApiParameterLocation({
                        method: api.method
                    });

                let value;
                switch (location) {
                    case 'path':
                        value = api.path_regex.exec(request.url).groups[key];
                        break;
                    case 'header':
                        value = request.header[key];
                        break;
                    case 'query':
                        value = request.query[key];
                        break;
                    case 'body':
                        value = request.body[key];
                        break;
                }

                if (
                    schema._type === 'array' &&
                    !Array.isArray(value) &&
                    !!value &&
                    ['header', 'query'].includes(location)
                ) {
                    value = value.split(',');
                }

                try {
                    context.args[key] = Joi.validateValue(
                        { [key]: value },
                        schema
                    );
                } catch (e) {
                    throw server.makeError({
                        code: 'bad_request',
                        default_http_code: 400,
                        default_message: 'bad request',
                        exception: e
                    });
                }
            }
        }
    });
