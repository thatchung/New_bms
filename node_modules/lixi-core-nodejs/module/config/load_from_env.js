/** nạp config từ file env
 * @param {string} path đường dẫn đến file env
 * @returns {object} danh sách các config được nạp
 */

let DotEnv = require('dotenv');
let Path = require('path');

module.exports = expo =>
    (expo.loadFromEnv = function({ node_mode, dirname } = {}) {
        let env = DotEnv.config({
            path: Path.join(dirname, node_mode + '.env')
        }).parsed;
        if (!env)
            throw Error(
                `config not found: ${Path.join(dirname, node_mode + '.env')}`
            );

        for (let key in env) {
            if (!env.hasOwnProperty(key)) continue;

            switch (env[key]) {
                case 'true':
                    env[key] = true;
                    break;

                case 'false':
                    env[key] = false;
                    break;

                case 'null':
                    env[key] = null;
                    break;

                case 'undefined':
                    env[key] = undefined;
                    break;

                default:
                    if (!isNaN(env[key])) env[key] = Number(env[key]);
                    break;
            }
        }

        env.NODE_ENV = node_mode;

        return env;
    });
