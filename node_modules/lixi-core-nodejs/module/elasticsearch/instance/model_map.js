/** hàm chuyển đổi đối tượng sang kiểu elasticsearch
 * @param {object} data dữ liệu cần chuyển đổi
 * @param {object} model_field các field của model
 * @param {function} model_elastic_map hàm chuyển đổi mở rộng của model
 * @returns {object} dữ liệu sau khi đã chuyển đổi
 */

let Joi = require('../../joi/_index');

module.exports = elastic =>
    (elastic.modelMap = function({ data, model_field, model_elastic_map }) {
        let result = baseConvert({ data, model_field });
        if (model_elastic_map) result = model_elastic_map(result);
        return result;
    });

function baseConvert({ data, model_field }) {
    if (Array.isArray(data)) {
        let result = [];

        for (let i = 0; i < data.length; i++) {
            result.push(
                baseConvert({
                    data: result[i],
                    model_field
                })
            );
        }

        return result;
    }

    let result;
    if (model_field) {
        result = {};

        let fields = model_field.describe().children;
        for (let key in fields) {
            if (!data.hasOwnProperty(key)) continue;
            if (!fields.hasOwnProperty(key)) continue;
            let field = fields[key];

            if (field.type === 'boolean' && [0, 1].includes(data[key])) {
                result[key] = data[key] === 1;
            } else result[key] = data[key];
        }
        
        result = Joi.validateValue({ data: result }, model_field);
    } else result = Object.assign({}, data);

    return result;
}
