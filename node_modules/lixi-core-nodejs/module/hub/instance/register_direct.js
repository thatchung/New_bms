/** đăng ký điểm giao tiếp */

let Joi = require('../../joi/_index');
let Callsite = require('callsite');
let Path = require('path');
let Fs = require('fs');

// #region [schema]

let schema_option = Joi.object({
    key: Joi.string()
        .required()
        .description('mã định danh'),
    module: Joi.string()
        .required()
        .description('module sẽ require'),
    file: Joi.string()
        .required()
        .description('đường dẫn đến file code')
});
schema_option = schema_option.default(schema_option.validate({}).value);

// #endregion

module.exports = hub =>
    (hub.registerDirect = function(options) {
        options = Joi.validateValue({ options }, schema_option);

        // #region [kiểm tra key tồn tại]

        if (hub.endpoints.some(x => x.key === options.key))
            throw Error(`hub endpoint "${options.key}" is already existed`);

        // #endregion

        let endpoint = {
            key: options.key,
            protocol: 'direct',
            module: options.module
        };

        endpoint.file = Path.join(
            Path.dirname(Callsite()[1].getFileName()),
            '../',
            endpoint.module,
            options.file
        );

        if (!Path.extname(endpoint.file) && !Fs.existsSync(endpoint.file)) {
            if (Fs.existsSync(endpoint.file + '.js')) endpoint.file += '.js';
            else endpoint.file += '/index.js';
        }

        hub.endpoints.push(endpoint);
    });
