/** khởi tạo knex client
 * @param {object} options thông số cấu hình
 * @returns {Knex} knex
 */

let Joi = require('../joi/_index');
let Knex = require('knex');

// #region [schema]

let schema_option = Joi.object({
    dialect: Joi.string()
        .required()
        .valid('mysql', 'pg', 'sqlite3', 'oracle', 'mssql')
        .description('loại database hỗ trợ (cần cài đặt thư viện tương ứng)'),
    connection: Joi.object({
        host: Joi.string()
            .required()
            .description('host của database'),
        port: Joi.number()
            .port()
            .required()
            .description('port của database'),
        username: Joi.string()
            .required()
            .description('tên đăng nhập vào database'),
        password: Joi.string()
            .required()
            .description('mật khẩu đăng nhập vào database'),
        database: Joi.string()
            .required()
            .description('database thao tác'),
        timezone: Joi.string()
            .default('utc')
            .description('timezone thao tác với database'),
        charset: Joi.string()
            .default('utf8mb4')
            .description('charset thao tác với database')
    })
        .required()
        .description('thông tin kết nối database'),
    elasticsearch: Joi.object().description('elasticsearch client'),
    models: Joi.object()
        .pattern(
            Joi.string(),
            Joi.object({
                field: Joi.object().pattern(
                    Joi.string(),
                    Joi.object().schema()
                ),
                elastic_model_map: Joi.func().arity(1)
            }).unknown(true)
        )
        .default({})
        .description('danh sách các model sử dụng')
});
schema_option = schema_option.default(schema_option.validate({}).value);

// #endregion

module.exports = expo =>
    (expo.init = function(options = {}) {
        let knex = {};

        // #region [ghi nhận option]

        knex.options = Joi.validateValue({ options }, schema_option);

        // #endregion

        // #region [khởi tạo knex client]

        knex.client = Knex({
            client: knex.options.dialect,
            connection: {
                host: knex.options.connection.host,
                port: knex.options.connection.port,
                user: knex.options.connection.username,
                password: knex.options.connection.password,
                database: knex.options.connection.database,
                timezone: knex.options.connection.timezone,
                charset: knex.options.connection.charset
            }
        });

        // #endregion

        // cài đặt các method cho đối tượng knex
        require('./instance/_index')(knex);

        return knex;
    });
