/** khai báo model */

let Joi = require('../../joi/_index');
let Callsite = require('callsite');

// #region [schema]

let schema_options = Joi.object({
    name: Joi.string()
        .required()
        .description('tên model'),
    description: Joi.string().description('mô tả model'),
    field: Joi.object()
        .pattern(Joi.string(), Joi.object().schema())
        .description('danh sách các field của model'),
    field_link: Joi.object()
        .pattern(
            Joi.string(),
            Joi.object({
                model: Joi.string()
                    .required()
                    .description('model liên kết'),
                field: Joi.string()
                    .required()
                    .description('field liên kết')
            })
        )
        .description('danh sách các field liên kết của model'),
    elastic_model_map: Joi.func()
        .arity(1)
        .description('hàm convert dữ liệu từ database sang elastic')
});
schema_options = schema_options.default(schema_options.validate({}).value);

// #endregion

module.exports = client =>
    (client.define = function(options) {
        // #region [validate]

        options = Joi.validateValue({ options }, schema_options);
        options.field = Joi.object(options.field).unknown(true);

        // #endregion

        // #region [tạo / cập nhật model]

        let model = client.models.find(x => x.name === options.name);

        if (model) {
            model.field = options.field;
            model.elastic_model_map = options.elastic_model_map;
        } else {
            model = options;
            client.models.push(model);
        }

        model.file = Callsite()[1].getFileName();

        // #endregion

        // #region [phát sinh sự kiện]

        client.raiseEvent({
            event: 'model_update',
            data: {
                name: options.name,
                model: model
            }
        });

        // #endregion

        return model;
    });
