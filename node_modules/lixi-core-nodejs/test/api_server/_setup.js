let { ApiServer, Joi, Logger } = require('../../index');
let Path = require('path');

module.exports = async function() {
    let server = ApiServer.init({
        request_log_host: 'http://10.39.93.27:9202',
        request_log_table_name: 'lixi_core_unit_test',
        main_logger: Logger.init({
            log_filename: Path.join(
                __dirname,
                '../../log/test_api_server.all.%DATE%.log'
            )
        })
    });

    getTest(server);
    getTestPath(server);
    getPaging(server);
    postCalc(server);

    await server.start();
    return { server, api: `http://localhost:${server.options.port}` };
};

function getTest(server) {
    server.registerEndpoint({
        method: 'GET',
        path: '/test',
        parameter: {
            data: Joi.string()
        },
        response: Joi.any(),
        handler: async function({ args }) {
            return args;
        }
    });
}

function getTestPath(server) {
    server.registerEndpoint({
        method: 'GET',
        path: '/test/:id',
        parameter: {
            id: Joi.number()
                .meta({ location: 'path' })
                .required()
        },
        response: Joi.any(),
        handler: async function({ args }) {
            return args;
        }
    });
}

function getPaging(server) {
    server.registerEndpoint({
        method: 'GET',
        path: '/paging',
        middlewares: [{ key: 'paging', enable: true }],
        response: Joi.any(),
        handler: async function({ args }) {
            let items = [];
            for (let i = 1; i <= args.page_size; i++) {
                items.push(i);
            }

            return {
                total: args.page * args.page_size,
                items: items
            };
        }
    });
}

function postCalc(server) {
    server.registerEndpoint({
        method: 'POST',
        path: '/calc',
        parameter: {
            a: Joi.number().required(),
            b: Joi.number().required()
        },
        response: Joi.object({
            sum: Joi.number(),
            sub: Joi.number()
        }),
        handler: async function({ args }) {
            return {
                sum: args.a + args.b,
                sub: args.a - args.b
            };
        }
    });
}
